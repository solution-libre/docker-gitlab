# Copyright (C) 2018-2023 Solution Libre <contact@solution-libre.fr>
# 
# This file is part of GitLab with Docker Compose.
# 
# GitLab with Docker Compose is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# GitLab with Docker Compose is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GitLab with Docker Compose.  If not, see <https://www.gnu.org/licenses/>.

services:
  web:
    image: 'gitlab/gitlab-ce:latest'
    restart: unless-stopped
    hostname: "${GITLAB_SUBDOMAIN}.${DOMAIN}"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        gitlab_rails['gitlab_shell_ssh_port'] = ${GITLAB_SSH_PORT}
        external_url "https://${GITLAB_SUBDOMAIN}.${DOMAIN}"
        mattermost['enable'] = ${MATTERMOST_ENABLE:-false}
        mattermost['gitlab_auth_endpoint'] = "http://${GITLAB_SUBDOMAIN}.${DOMAIN}/oauth/authorize"
        mattermost['gitlab_token_endpoint'] = "http://${GITLAB_SUBDOMAIN}.${DOMAIN}/oauth/token"
        mattermost['gitlab_user_api_endpoint'] = "http://${GITLAB_SUBDOMAIN}.${DOMAIN}/api/v4/user"
        mattermost['service_address'] = "0.0.0.0"
        mattermost_external_url "https://${MATTERMOST_SUBDOMAIN}.${DOMAIN}"
        mattermost_nginx['enable'] = false
        nginx['listen_port'] = '80'
        nginx['listen_https'] = false
        registry['enable'] = ${REGISTRY_ENABLE:-false}
        registry['registry_http_addr'] = "0.0.0.0:5000"
        registry['storage'] = {
          's3' => {
            'accesskey'      => '${REGISTRY_STORAGE_ACCESS_KEY}',
            'secretkey'      => '${REGISTRY_STORAGE_SECRET_KEY}',
            'bucket'         => '${REGISTRY_STORAGE_BUCKET}',
            'region'         => '${REGISTRY_STORAGE_REGION}',
            'regionendpoint' => '${REGISTRY_STORAGE_REGION_ENDPOINT}'
          }
        }
        registry_external_url "https://${REGISTRY_SUBDOMAIN}.${DOMAIN}"
        registry_nginx['enable'] = false
    # Traefik labels are suggested as an example for people using Traefik,
    # remove them if you are using another reverse proxy.
    labels:
      traefik.enable: true
      traefik.http.routers.gitlab.entrypoints: websecure
      traefik.http.routers.gitlab.rule: "Host(`${GITLAB_SUBDOMAIN}.${DOMAIN}`)"
      traefik.http.routers.gitlab.tls.certresolver: myresolver
      traefik.http.services.gitlab.loadbalancer.server.port: 80
    # If you don't want to use a reverse proxy (not suitable for production!)
    # ports:
    #  - "80:80"
    networks:
      - default
      - web
    ports:
      - ${GITLAB_SSH_PORT}:22
    volumes:
      - web_config:/etc/gitlab
      - web_logs:/var/log/gitlab
      - web_data:/var/opt/gitlab

  runner:
    image: 'gitlab/gitlab-runner:latest'
    networks:
      - runner
    restart: unless-stopped
    volumes:
      - runner_config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  runner:
  web:
    external: true

volumes:
  runner_config:
  web_config:
  web_data:
  web_logs:
